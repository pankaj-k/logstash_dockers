# Before this is run, make sure that docker hub has logstash-8.17.2 and AWS ECR has logstash-8.17.2 repo 
# already created.
name: Build and Push Logstash Docker Image

on:
  push:
    branches:
      #- main
      - terraform_modules_introduced
    paths:
      - 'logstash/docker/Dockerfile'
      - 'logstash/docker/http_to_s3.conf'
      - 'logstash/docker/logstash.yml'
      - 'logstash/docker/pipelines.yml'
      - '.github/workflows/docker-push.yml'  # Runs if the workflow itself changes
  workflow_dispatch:  # Allow manual triggers also

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.0   # Put in the version you want. 
          # Your .terraform.lock.hcl will ensure the providers are the same version.
          # Like like hashicorp/aws, hashicorp/random, etc
          # This line above decides which terraform version to use.

      ################# STEP 1 ######################
      # AWS Login

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # AWS ECR Login
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      # Create all infra in AWS except ECS
      - name: Navigate to Terraform Directory 
        run: cd terraform

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'   # only auto-apply on main
        # Create all infra except ECS
        run: terraform apply -input=false -auto-approve tfplan -target=module.ecr -target=module.alb
      ################## STEP 2 ######################
      # Docker login to Docker Hub 
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # This is your Docker Hub Access Token. Not your password.

      ################### STEP 4 #####################
      # Create image
      - name: Build and Tag Docker Image
        run: |
          AWS_REPO_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/logstash-8.17.2"
          DOCKERHUB_REPO="seagulls6/logstash-8.17.2"

          echo "AWS_REPO_URI: $AWS_REPO_URI"  # Debugging output

          docker build -t logstash-8.17.2:latest logstash
          
          # Tag for AWS ECR 
          docker tag logstash-8.17.2:latest $AWS_REPO_URI:latest
          docker tag logstash-8.17.2:latest $AWS_REPO_URI:0.1
          
          # Tag for Docker Hub
          docker tag logstash-8.17.2:latest $DOCKERHUB_REPO:latest
          docker tag logstash-8.17.2:latest $DOCKERHUB_REPO:0.1
      ########################################
      # Push Docker Image to AWS ECR 
      - name: Push Docker Image to Amazon ECR
        run: |
          AWS_REPO_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/logstash-8.17.2"
          docker push $AWS_REPO_URI:latest
          docker push $AWS_REPO_URI:0.1

      # Step 5: Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          DOCKERHUB_REPO="seagulls6/logstash-8.17.2"
          docker push $DOCKERHUB_REPO:latest
          docker push $DOCKERHUB_REPO:0.1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'   # only auto-apply on main
        # Create all infra except ECS
        run: terraform apply -input=false -auto-approve tfplan -target=module.ecs_service

      #   uses: docker/build-push-action@v5
      #   with:
      #     context: logstash_simple/docker  # Path to your Dockerfile 
      #     file: logstash_simple/docker/Dockerfile # Path to your Dockerfile
      #     push: true
      #     tags: seagulls6/logstash-8.17.2:0.1 # You have to create a repository first in https://hub.docker.com 
      #     # Your username is the first part of the repository name. In this case, seagulls6 is the username. 
      #     # The second part is the name of the image. In this case, logstash-8.17.2 is the image name.
      #     # When you create the repository in hub.docker.com just name the repository the image name. 
      #     # It will automatically prefix your username to the repository name.
      # - name: Verify Image on Docker Hub
      #   run: docker pull seagulls6/logstash-8.17.2:0.1 